@model AuctionsWeb2.Models.SearchViewModel

@{
    ViewBag.Title = "Search";
    TempData["auctionId"] = null;

}
<h2>@ViewBag.Title.</h2>
<p class="text-danger">@ViewBag.ErrorMessage</p>


@using (Html.BeginForm("Search", "Home", FormMethod.Post, new { @class = "form-horizontal", role = "form" }))
{
    <div class="form-horizontal">
        <div class="form-group">
            @Html.LabelFor(m => m.Name, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.Name, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MinPrice, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MinPrice, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MaxPrice, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MaxPrice, new { @class = "form-control" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MinDate, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MinDate, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", type = "datetime-local" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.MaxDate, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.TextBoxFor(m => m.MaxDate, "{0:yyyy-MM-ddThh:mm:ss}", new { @class = "form-control", type = "datetime-local" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(m => m.State, new { @class = "col-md-2 control-label" })
            <div class="col-md-10">
                @Html.EnumDropDownListFor(m => m.State, "Select state", new { @class = "form-control" })
                @Html.ValidationMessageFor(m => m.State)
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Search" class="btn btn-default" />
            </div>
        </div>

    </div>
}

<div class="card-deck">
    @foreach (var auction in Model.Auctions)
    {
        var lastBidder = "No Bids Yet";
        var bids = auction.Bids;

        if (!bids.Count().Equals(0))
        {
            lastBidder = bids.OrderByDescending(a => a.Time).First().AspNetUser.UserName;
        }

        <div class="col-sm-3 mt-4">
            <div class="card">
                <div id="ch" class="card-header bg-transparent border-success">
                    @Html.ActionLink(auction.Name, "Auction", "Home", new { Id = auction.Id }, null)
                </div>
                <img class="card-img-top" src="http://via.placeholder.com/277x200" alt="Card image cap">
                <div class="card-body">
                    <p id="auction-price" class="card-text">@auction.PriceNow</p>
                    <p id="auction-bidder" class="card-text">@lastBidder</p>
                    <h5 id="auction-state" class="card-title">@auction.State</h5>


                    @{
                        TimeSpan timeLeft = TimeSpan.Zero;
                        if (auction.State.Contains("OPEN"))
                        {
                            var tl = auction.TimeEnd - DateTime.Now;
                            timeLeft = (TimeSpan)tl;
                        }
                        else if (auction.State.Contains("READY"))
                        {
                            timeLeft = TimeSpan.FromSeconds((long)auction.Duration);
                        }
                    }
                    @if (auction.State.Contains("OPEN"))
                    {
                        @*<button id="btnSubmit" class="btn btn-primary btn-sm" data-target="#myModal" data-toggle="modal" onclick="
                            $.ajax({
                                url: '/Home/OpenModal' ,
                                data: { auctionId: @auction.Id }
                            });">Bid</button>*@
                            using (Html.BeginForm("CreateBid", "Home", new { auctionId = auction.Id }, FormMethod.Post, null))
                            {
                                @Html.TextBoxFor(m => m.numTokens, new { @class = "form-control" })
                                <input type = "submit" value = "Bid" class="btn btn-default" />

                        }

                        @*<input type="text" value="1" id="bit-amount" name="bidAmount">
                        <input type="button"
                               value="Bid"
                               class="btn btn-primary btn-sm"
                               id="bid"
                               onclick="location.href='@Url.Action("MakeBid", "Home", new { auctionId = auction.Id, numTokens = bidAmount })'" />*@

                        @*<input type="button"
                               value="Bid"
                               class="btn btn-primary btn-sm"
                               id="bid"/>*@


                    }
                    else
                    {
                        <button id="btnSubmit" class="btn btn-primary btn-sm disabled" data-target="#myModal" data-toggle="modal" disabled>Bid</button>
                    }

                </div>
                <div class="card-footer">
                    <h5 id="time-part">@timeLeft.ToString("hh\\:mm\\:ss")</h5>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts{

    <script src="~/Scripts/jquery-3.3.1.min.js"></script>
    <script src="~/Scripts/jquery.signalR-2.4.0.min.js"></script>
    <script src="~/signalr/hubs"></script>


    <script type="text/javascript">
        $(function () {

            setInterval(reduceSeconds, 1000);
            var myHub = $.connection.myHub;

            myHub.client.announceBid = function (auctionName, username, newValue) {
                console.log('response from server: ' + auctionName + ' ' + username + ' ' + newValue);
                $('.card-deck').each(function () {
                    if (auctionName.trim() == $('.card-deck').find('a').html().trim()) {
                        $('#auction-price').html(newValue);
                        $('#auction-bidder').html(username);
                    }
                });
            }
            $.connection.hub.start().done(function () {
                $('#bid').click(function () {
                    var username = $('#logoutForm').find('a').html();
                    username = username.substring(6, username.length - 1);
                    var auctionName = $(this).parent().parent().find('a').html();
                    var newValue = $(this).parent().find('#auction-price').html()
                    newValue = parseFloat(newValue) + ( 1.0 * 10.0 );
                    myHub.server.announceBid(auctionName, username, newValue);
                });
            });
        });

        function reduceSeconds() {
            $('.col-sm-3').each(function () {
                var hms = $(this).find('#time-part').get(0).innerHTML;
                if (hms != '00:00:00') {
                    var a = hms.split(':');
                    var seconds = (+a[0]) * 60 * 60 + (+a[1]) * 60 + (+a[2]);
                    seconds--;
                    var hh = addZero(Math.floor((seconds / 3600)));
                    var mm = addZero(Math.floor(((seconds % 3600) / 60)));
                    var ss = addZero(Math.floor((seconds % 60)));
                    hms = hh + ':' + mm + ':' + ss;
                    $(this).find('#time-part').get(0).innerHTML = hms;
                    if (seconds == 0) {
                        $(this).find('#auction-state').html = 'CLOSED';

                    }
                }
            });
        }

        function addZero(asd) {
            if (asd < 10) {
                asd += '0';
            }
            return asd;
        }
    </script>
}